import java.security.SecureRandom;
import java.security.Key;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.NoSuchPaddingException;
import java.util.*;
class HelloWorld {
   // Function to generate a random password
    public static String generatePassword(int length) {
        String charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()-_=+";
        StringBuilder password = new StringBuilder();

        SecureRandom random = new SecureRandom();
        for (int i = 0; i < length; i++) {
            int index = random.nextInt(charset.length());
            password.append(charset.charAt(index));
        }

        return password.toString();
    }

    // Function to generate key pair for encryption
    public static KeyPair generateKeyPair() throws NoSuchAlgorithmException {
        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");
        keyPairGenerator.initialize(2048);
        return keyPairGenerator.generateKeyPair();
    }

    // Function to encrypt a password using the public key
    public static String encryptPassword(String password, Key publicKey) throws Exception {
        Cipher cipher = Cipher.getInstance("RSA");
        cipher.init(Cipher.ENCRYPT_MODE, publicKey);
        byte[] encryptedBytes = cipher.doFinal(password.getBytes());
        return Base64.getEncoder().encodeToString(encryptedBytes);
    }

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        try {
            // Generate a random password
            int passwordLength = 12; // You can change the length as needed
            String generatedPassword = generatePassword(passwordLength);
            System.out.println("Generated Password: " + generatedPassword);
            System.out.println("");
            // Generate key pair for encryption
            KeyPair keyPair = generateKeyPair();
            Key publicKey = keyPair.getPublic();

            // Encrypt the password
            String encryptedPassword = encryptPassword(generatedPassword, publicKey);
            System.out.println("Password Secured in encrypted.For more Security. If You want to check press 1");
            int shw=sc.nextInt();
            if(shw==1){
               System.out.println("Encrypted Password: " + encryptedPassword);
            }
            else{
                System.out.println("Something went wrong! please try again");
            }
          //  System.out.println("Encrypted Password: " + encryptedPassword);

            // Additional steps: Save the encrypted password securely

        } 
        catch (Exception e) {
            e.printStackTrace();
        }
    }
}